```bash
#!/bin/bash

# This script concatenates specific files needed to review fixes for the Disaffected Production Suite into a single text file.
# Run from the project root directory (/mnt/process/show-build/).

# Output file
OUTPUT_FILE="review_files.txt"

# List of files to include, updated to verify copilot_instructions_6.md tasks
FILES_TO_INCLUDE=(
    "docs/00_rehydration_main.markdown"
    "docs/06_todo_and_issues.markdown"
    "docs/07_modal_usage.markdown"
    "disaffected-ui/vue.config.js"
    "disaffected-ui/package.json"
    "disaffected-ui/src/main.js"
    "disaffected-ui/src/components/ContentEditor.vue"
    "disaffected-ui/src/components/RundownManager.vue"
    "disaffected-ui/src/components/ColorSelector.vue"
    "disaffected-ui/src/components/EditorPanel.vue"
    "disaffected-ui/src/components/RundownPanel.vue"
    "disaffected-ui/src/components/EpisodeSelector.vue"
    "disaffected-ui/src/composables/useAuth.js"
    "disaffected-ui/src/stores/auth.js"
    "disaffected-ui/src/utils/themeColorMap.js"
    "disaffected-ui/src/views/AssetsView.vue"
    "disaffected-ui/src/views/TemplatesView.vue"
    "disaffected-ui/src/views/DashboardView.vue"
    "disaffected-ui/src/App.vue"
    "disaffected-ui/src/views/ProfileView.vue"
    "disaffected-ui/src/components/modals/FsqModal.vue"
    "disaffected-ui/src/components/modals/SotModal.vue"
    "disaffected-ui/src/components/modals/VoModal.vue"
    "disaffected-ui/src/components/modals/NatModal.vue"
    "disaffected-ui/src/components/modals/PkgModal.vue"
    "disaffected-ui/src/views/SettingsView.vue"
    "disaffected-ui/src/plugins/vuetify.js"
    "disaffected-ui/src/router/index.js"
    "main.js"
)

# Clear or create the output file
> "$OUTPUT_FILE"

# Check current directory
echo "Current directory: $(pwd)" >> "$OUTPUT_FILE"
if [[ "$(pwd)" != *"/mnt/process/show-build" ]]; then
    echo "WARNING: Script must be run from /mnt/process/show-build/" >> "$OUTPUT_FILE"
fi

# Check for key directories
for dir in "disaffected-ui/src" "disaffected-ui/docs" "disaffected-ui/tests" "docs"; do
    if [ -d "$dir" ]; then
        echo "Found directory: $dir" >> "$OUTPUT_FILE"
    else
        echo "Directory not found: $dir" >> "$OUTPUT_FILE"
    fi
done

# Function to append file content with a header
append_file_content() {
    local file="$1"
    if [ -f "$file" ]; then
        echo "===== $file =====" >> "$OUTPUT_FILE"
        cat "$file" >> "$OUTPUT_FILE"
        echo -e "\n===== END $file =====\n" >> "$OUTPUT_FILE"
        echo "Included: $file"
    else
        # Try to find the file in the project
        found_file=$(find . -type f -path "*/$file" 2>/dev/null | head -n 1)
        if [ -n "$found_file" ]; then
            echo "===== $found_file =====" >> "$OUTPUT_FILE"
            cat "$found_file" >> "$OUTPUT_FILE"
            echo -e "\n===== END $found_file =====\n" >> "$OUTPUT_FILE"
            echo "Included: $found_file (found via search)"
        else
            echo "Warning: $file not found, skipping."
            echo "===== $file =====\nNOT FOUND\n===== END $file =====\n" >> "$OUTPUT_FILE"
        fi
    fi
}

# Loop through files and append their contents
for file in "${FILES_TO_INCLUDE[@]}"; do
    append_file_content "$file"
done

# Check if output file was created
if [ -f "$OUTPUT_FILE" ]; then
    echo "Text file created successfully: $OUTPUT_FILE"
else
    echo "Failed to create text file."
fi
```